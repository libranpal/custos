/*
 * Copyright 2024 Custos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.custos.oauth.model;

import lombok.Builder;
import lombok.Getter;

/**
 * Represents an OAuth 2.1 authorization response.
 * This class encapsulates the parameters returned by the authorization server to the client.
 */
@Getter
@Builder
public class AuthorizationResponse {
    /**
     * The authorization code generated by the authorization server.
     * This is required for the authorization code flow.
     */
    private final String code;
    
    /**
     * The state parameter from the authorization request, if provided.
     * This is optional and may be null.
     */
    private final String state;
    
    /**
     * The error code if the authorization request failed.
     * This is optional and may be null.
     */
    private final String error;
    
    /**
     * A human-readable description of the error.
     * This is optional and may be null.
     */
    private final String errorDescription;
    
    /**
     * The URI to which the error should be reported.
     * This is optional and may be null.
     */
    private final String errorUri;

    public static class AuthorizationResponseBuilder {
        public AuthorizationResponse build() {
            if (code == null && error == null) {
                throw new NullPointerException("Either code or error must be provided");
            }
            return new AuthorizationResponse(code, state, error, errorDescription, errorUri);
        }
    }
} 